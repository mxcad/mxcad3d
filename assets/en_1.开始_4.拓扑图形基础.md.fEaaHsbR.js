import{_ as t,c as a,o as s,a3 as l}from"./chunks/framework.C-dFTOTt.js";const x=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"en/1.开始/4.拓扑图形基础.md","filePath":"en/1.开始/4.拓扑图形基础.md"}'),n={name:"en/1.开始/4.拓扑图形基础.md"};function o(d,e,r,c,i,p){return s(),a("div",null,[...e[0]||(e[0]=[l('<blockquote><h2 id="topological-shapes" tabindex="-1">Topological Shapes <a class="header-anchor" href="#topological-shapes" aria-label="Permalink to &quot;Topological Shapes&quot;">​</a></h2></blockquote><p>Topological shapes consist of various primitive elements and complex shapes composed of these primitives.</p><table><thead><tr><th style="text-align:center;">Topological Shape Class</th><th style="text-align:center;">Description</th></tr></thead><tbody><tr><td style="text-align:center;">Mx3dShapeObject</td><td style="text-align:center;">Represents a topological shape, base class for the following classes</td></tr><tr><td style="text-align:center;">Mx3dShapeVertex</td><td style="text-align:center;">Represents a vertex</td></tr><tr><td style="text-align:center;">Mx3dShapeEdge</td><td style="text-align:center;">Represents an edge formed by connecting two vertices</td></tr><tr><td style="text-align:center;">Mx3dShapeWire</td><td style="text-align:center;">Consists of multiple connected edges and can be closed</td></tr><tr><td style="text-align:center;">Mx3dShapeFace</td><td style="text-align:center;">Represents a face enclosed by a closed wire</td></tr><tr><td style="text-align:center;">Mx3dShapeShell</td><td style="text-align:center;">Consists of multiple faces and can be closed</td></tr><tr><td style="text-align:center;">Mx3dShapeSolid</td><td style="text-align:center;">Represents a solid enclosed by a closed shell</td></tr><tr><td style="text-align:center;">Mx3dShapeCompSolid</td><td style="text-align:center;">Represents a combination of multiple solids</td></tr><tr><td style="text-align:center;">Mx3dShapeCompound</td><td style="text-align:center;">Represents a combination of multiple shapes</td></tr></tbody></table><p>The above topological shape objects can be stored in document labels.</p>',4)])])}const g=t(n,[["render",o]]);export{x as __pageData,g as default};
