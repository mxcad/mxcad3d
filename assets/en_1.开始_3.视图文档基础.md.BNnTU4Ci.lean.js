import{_ as a,c as e,o as t,a3 as i}from"./chunks/framework.C-dFTOTt.js";const k=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"en/1.开始/3.视图文档基础.md","filePath":"en/1.开始/3.视图文档基础.md"}'),n={name:"en/1.开始/3.视图文档基础.md"};function h(l,s,o,p,c,d){return t(),e("div",null,[...s[0]||(s[0]=[i('<blockquote><h2 id="view-document" tabindex="-1">View Document <a class="header-anchor" href="#view-document" aria-label="Permalink to &quot;View Document&quot;">​</a></h2></blockquote><p>An object of type <a href="./.html">MxCAD3DObject</a> represents a view document object, which can be instantiated using the <code>new</code> keyword.</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> mxcad3d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MxCAD3DObject</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Instantiate</span></span></code></pre></div><blockquote><h2 id="document" tabindex="-1">Document <a class="header-anchor" href="#document" aria-label="Permalink to &quot;Document&quot;">​</a></h2></blockquote><p>The view document object contains a <a href="./.html">Mx3dDbDocument</a> document object, which is used to store the data of the 3D model. You can obtain the document object using the following method:</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> doc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mxcad3d.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getDocument</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Get the document object</span></span></code></pre></div><blockquote><h2 id="labels" tabindex="-1">Labels <a class="header-anchor" href="#labels" aria-label="Permalink to &quot;Labels&quot;">​</a></h2></blockquote><p>The document consists of multiple <a href="./.html">Mx3dDbLabel</a> labels. Topological data, color data, and other information related to the graphics are stored on these labels.</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> shapeLabel</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> doc.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addShapeLabel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Create a label</span></span></code></pre></div>',9)])])}const u=a(n,[["render",h]]);export{k as __pageData,u as default};
