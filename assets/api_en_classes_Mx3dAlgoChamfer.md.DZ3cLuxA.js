import{_ as t,c as a,o as r,a3 as o}from"./chunks/framework.C-dFTOTt.js";const m=JSON.parse('{"title":"Class: Mx3dAlgoChamfer","description":"","frontmatter":{},"headers":[],"relativePath":"api_en/classes/Mx3dAlgoChamfer.md","filePath":"api_en/classes/Mx3dAlgoChamfer.md"}'),l={name:"api_en/classes/Mx3dAlgoChamfer.md"};function d(s,e,h,n,i,c){return r(),a("div",null,[...e[0]||(e[0]=[o('<p>[mxcad_3d API documentation](../README. md)/Mx3dAlgoChamfer</p><h1 id="class-mx3dalgochamfer" tabindex="-1">Class: Mx3dAlgoChamfer <a class="header-anchor" href="#class-mx3dalgochamfer" aria-label="Permalink to &quot;Class: Mx3dAlgoChamfer&quot;">​</a></h1><p>Inverted angle algorithm</p><h2 id="hierarchy" tabindex="-1">Hierarchy <a class="header-anchor" href="#hierarchy" aria-label="Permalink to &quot;Hierarchy&quot;">​</a></h2><ul><li><p><a href="./Mx3dAlgoObject.html"><code>Mx3dAlgoObject</code></a></p><p>↳ <strong><code>Mx3dAlgoChamfer</code></strong></p></li></ul><h2 id="table-of-contents" tabindex="-1">Table of contents <a class="header-anchor" href="#table-of-contents" aria-label="Permalink to &quot;Table of contents&quot;">​</a></h2><h3 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-label="Permalink to &quot;Constructors&quot;">​</a></h3><ul><li><a href="./Mx3dAlgoChamfer.html#constructor">constructor</a></li></ul><h3 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h3><ul><li><a href="./Mx3dAlgoChamfer.html#add">Add</a></li><li><a href="./Mx3dAlgoChamfer.html#shape">Shape</a></li></ul><h2 id="constructors-1" tabindex="-1">Constructors <a class="header-anchor" href="#constructors-1" aria-label="Permalink to &quot;Constructors&quot;">​</a></h2><h3 id="constructor" tabindex="-1">constructor <a class="header-anchor" href="#constructor" aria-label="Permalink to &quot;constructor&quot;">​</a></h3><p>• <strong>new Mx3dAlgoChamfer</strong>(<code>S</code>)</p><p>Constructor, input the object that requires a reverse angle</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">S</td><td style="text-align:left;">[Mx3dShapeObject] (Mx3dShapeObject. md)</td><td style="text-align:left;"></td></tr></tbody></table><h4 id="overrides" tabindex="-1">Overrides <a class="header-anchor" href="#overrides" aria-label="Permalink to &quot;Overrides&quot;">​</a></h4><p>Mx3dAlgoObject.constructor</p><h2 id="methods-1" tabindex="-1">Methods <a class="header-anchor" href="#methods-1" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="add" tabindex="-1">Add <a class="header-anchor" href="#add" aria-label="Permalink to &quot;Add&quot;">​</a></h3><p>▸ <strong>Add</strong>(<code>Dis</code>, <code>E</code>): <code>void</code></p><p>Add edges on objects that require a reverse angle</p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">Dis</td><td style="text-align:left;">number</td><td style="text-align:left;">Inverted angle distance</td></tr><tr><td style="text-align:left;">E</td><td style="text-align:left;">[Mx3dShapeEdge] (Mx3dShapeEdge. md)</td><td style="text-align:left;">Edges on objects</td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="shape" tabindex="-1">Shape <a class="header-anchor" href="#shape" aria-label="Permalink to &quot;Shape&quot;">​</a></h3><p>▸ <strong>Shape</strong>(): <a href="./Mx3dShapeObject.html"><code>Mx3dShapeObject</code></a></p><p>Obtain the shape object after obtaining the inverted angle</p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./Mx3dShapeObject.html"><code>Mx3dShapeObject</code></a></p><p>Shape object after oblique angle reversal</p>',33)])])}const p=t(l,[["render",d]]);export{m as __pageData,p as default};
