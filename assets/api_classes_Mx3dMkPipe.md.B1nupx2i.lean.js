import{_ as t,c as a,o as r,a3 as o}from"./chunks/framework.C-dFTOTt.js";const u=JSON.parse('{"title":"Class: Mx3dMkPipe","description":"","frontmatter":{},"headers":[],"relativePath":"api/classes/Mx3dMkPipe.md","filePath":"api/classes/Mx3dMkPipe.md"}'),d={name:"api/classes/Mx3dMkPipe.md"};function l(s,e,i,h,n,c){return r(),a("div",null,[...e[0]||(e[0]=[o('<p><a href="./../README.html">mxcad_3d API 文档</a> / Mx3dMkPipe</p><h1 id="class-mx3dmkpipe" tabindex="-1">Class: Mx3dMkPipe <a class="header-anchor" href="#class-mx3dmkpipe" aria-label="Permalink to &quot;Class: Mx3dMkPipe&quot;">​</a></h1><p>表示建模路径扫掠体的类，继承自 Mx3dMkObject</p><h2 id="hierarchy" tabindex="-1">Hierarchy <a class="header-anchor" href="#hierarchy" aria-label="Permalink to &quot;Hierarchy&quot;">​</a></h2><ul><li><p><a href="./Mx3dMkObject.html"><code>Mx3dMkObject</code></a></p><p>↳ <strong><code>Mx3dMkPipe</code></strong></p></li></ul><h2 id="table-of-contents" tabindex="-1">Table of contents <a class="header-anchor" href="#table-of-contents" aria-label="Permalink to &quot;Table of contents&quot;">​</a></h2><h3 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-label="Permalink to &quot;Constructors&quot;">​</a></h3><ul><li><a href="./Mx3dMkPipe.html#constructor">constructor</a></li></ul><h3 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h3><ul><li><a href="./Mx3dMkPipe.html#build">Build</a></li><li><a href="./Mx3dMkPipe.html#isdone">IsDone</a></li><li><a href="./Mx3dMkPipe.html#shape">Shape</a></li></ul><h2 id="constructors-1" tabindex="-1">Constructors <a class="header-anchor" href="#constructors-1" aria-label="Permalink to &quot;Constructors&quot;">​</a></h2><h3 id="constructor" tabindex="-1">constructor <a class="header-anchor" href="#constructor" aria-label="Permalink to &quot;constructor&quot;">​</a></h3><p>• <strong>new Mx3dMkPipe</strong>(<code>Spine</code>, <code>Profile</code>)</p><p>构造函数，接受一条路径和一个截面形状来创建扫掠体。</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Spine</code></td><td style="text-align:left;"><a href="./Mx3dShapeWire.html"><code>Mx3dShapeWire</code></a></td><td style="text-align:left;">路径线。</td></tr><tr><td style="text-align:left;"><code>Profile</code></td><td style="text-align:left;"><a href="./Mx3dShapeObject.html"><code>Mx3dShapeObject</code></a></td><td style="text-align:left;">截面形状。</td></tr></tbody></table><h4 id="overrides" tabindex="-1">Overrides <a class="header-anchor" href="#overrides" aria-label="Permalink to &quot;Overrides&quot;">​</a></h4><p>Mx3dMkObject.constructor</p><p>• <strong>new Mx3dMkPipe</strong>(<code>Spine</code>, <code>Profile</code>, <code>aMode</code>, <code>ForceApproxC1</code>)</p><p>构造函数，接受一条路径、一个截面形状、一个模式和一个布尔值来创建扫掠体。</p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Spine</code></td><td style="text-align:left;"><a href="./Mx3dShapeWire.html"><code>Mx3dShapeWire</code></a></td><td style="text-align:left;">路径线。</td></tr><tr><td style="text-align:left;"><code>Profile</code></td><td style="text-align:left;"><a href="./Mx3dShapeObject.html"><code>Mx3dShapeObject</code></a></td><td style="text-align:left;">截面形状。</td></tr><tr><td style="text-align:left;"><code>aMode</code></td><td style="text-align:left;"><a href="./../enums/MdGe.MxGFTrihedron.html"><code>MxGFTrihedron</code></a></td><td style="text-align:left;">模式。</td></tr><tr><td style="text-align:left;"><code>ForceApproxC1</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">强制近似C1连续性。</td></tr></tbody></table><h4 id="overrides-1" tabindex="-1">Overrides <a class="header-anchor" href="#overrides-1" aria-label="Permalink to &quot;Overrides&quot;">​</a></h4><p>Mx3dMkObject.constructor</p><h2 id="methods-1" tabindex="-1">Methods <a class="header-anchor" href="#methods-1" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="build" tabindex="-1">Build <a class="header-anchor" href="#build" aria-label="Permalink to &quot;Build&quot;">​</a></h3><p>▸ <strong>Build</strong>(): <code>void</code></p><p>执行路径扫掠体的建模算法。</p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="isdone" tabindex="-1">IsDone <a class="header-anchor" href="#isdone" aria-label="Permalink to &quot;IsDone&quot;">​</a></h3><p>▸ <strong>IsDone</strong>(): <code>boolean</code></p><p>检查建模算法是否执行完成。</p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><p>建模算法执行是否完成的标志，true 完成，false 失败。</p><hr><h3 id="shape" tabindex="-1">Shape <a class="header-anchor" href="#shape" aria-label="Permalink to &quot;Shape&quot;">​</a></h3><p>▸ <strong>Shape</strong>(): <a href="./Mx3dShapeObject.html"><code>Mx3dShapeObject</code></a></p><p>获取路径扫掠体的拓扑形状。</p><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./Mx3dShapeObject.html"><code>Mx3dShapeObject</code></a></p><p>拓扑形状。</p>',44)])])}const x=t(d,[["render",l]]);export{u as __pageData,x as default};
