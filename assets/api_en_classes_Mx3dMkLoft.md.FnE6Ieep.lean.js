import{_ as t,c as a,o,a3 as r}from"./chunks/framework.C-dFTOTt.js";const p=JSON.parse('{"title":"Class: Mx3dMkLoft","description":"","frontmatter":{},"headers":[],"relativePath":"api_en/classes/Mx3dMkLoft.md","filePath":"api_en/classes/Mx3dMkLoft.md"}'),d={name:"api_en/classes/Mx3dMkLoft.md"};function l(i,e,n,h,s,c){return o(),a("div",null,[...e[0]||(e[0]=[r('<p>[mxcad_3d API Document](../README. md)/Mx3dMkLoft</p><h1 id="class-mx3dmkloft" tabindex="-1">Class: Mx3dMkLoft <a class="header-anchor" href="#class-mx3dmkloft" aria-label="Permalink to &quot;Class: Mx3dMkLoft&quot;">​</a></h1><p>The class representing the modeling and layout body inherits from Mx3dMkObject.</p><h2 id="hierarchy" tabindex="-1">Hierarchy <a class="header-anchor" href="#hierarchy" aria-label="Permalink to &quot;Hierarchy&quot;">​</a></h2><ul><li><p><a href="./Mx3dMkObject.html"><code>Mx3dMkObject</code></a></p><p>↳ <strong><code>Mx3dMkLoft</code></strong></p></li></ul><h2 id="table-of-contents" tabindex="-1">Table of contents <a class="header-anchor" href="#table-of-contents" aria-label="Permalink to &quot;Table of contents&quot;">​</a></h2><h3 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-label="Permalink to &quot;Constructors&quot;">​</a></h3><ul><li><a href="./Mx3dMkLoft.html#constructor">constructor</a></li></ul><h3 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h3><ul><li><a href="./Mx3dMkLoft.html#addvertex">AddVertex</a></li><li><a href="./Mx3dMkLoft.html#addwire">AddWire</a></li><li><a href="./Mx3dMkLoft.html#build">Build</a></li><li><a href="./Mx3dMkLoft.html#continuity">Continuity</a></li><li><a href="./Mx3dMkLoft.html#isdone">IsDone</a></li><li><a href="./Mx3dMkLoft.html#setcontinuity">SetContinuity</a></li><li><a href="./Mx3dMkLoft.html#setsmoothing">SetSmoothing</a></li><li><a href="./Mx3dMkLoft.html#shape">Shape</a></li><li><a href="./Mx3dMkLoft.html#usesmoothing">UseSmoothing</a></li></ul><h2 id="constructors-1" tabindex="-1">Constructors <a class="header-anchor" href="#constructors-1" aria-label="Permalink to &quot;Constructors&quot;">​</a></h2><h3 id="constructor" tabindex="-1">constructor <a class="header-anchor" href="#constructor" aria-label="Permalink to &quot;constructor&quot;">​</a></h3><p>• <strong>new Mx3dMkLoft</strong>(<code>isSolid?</code>, <code>ruled?</code>, <code>pres3d?</code>)</p><p>Constructor, initialize the layout object.</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>isSolid?</code></td><td style="text-align:left;">` Boolean</td><td style="text-align:left;">Whether to create a solid layout, default is false</td></tr><tr><td style="text-align:left;"><code>ruled?</code></td><td style="text-align:left;">` Boolean</td><td style="text-align:left;">Whether to use rule layout, default is false</td></tr><tr><td style="text-align:left;"><code>pres3d?</code></td><td style="text-align:left;"><code>Number</code></td><td style="text-align:left;">The plane resolution of the layout body is set to 0 by default</td></tr></tbody></table><h4 id="overrides" tabindex="-1">Overrides <a class="header-anchor" href="#overrides" aria-label="Permalink to &quot;Overrides&quot;">​</a></h4><p>Mx3dMkObject.constructor</p><h2 id="methods-1" tabindex="-1">Methods <a class="header-anchor" href="#methods-1" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="addvertex" tabindex="-1">AddVertex <a class="header-anchor" href="#addvertex" aria-label="Permalink to &quot;AddVertex&quot;">​</a></h3><p>▸ <strong>AddVertex</strong>(<code>aVertex</code>): <code>void</code></p><p>Add a vertex to the loft.</p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">AVertex</td><td style="text-align:left;">[Mx3dShapeVertex] (Mx3dShapeVertex. md)</td><td style="text-align:left;">The vertex object to be added</td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="addwire" tabindex="-1">AddWire <a class="header-anchor" href="#addwire" aria-label="Permalink to &quot;AddWire&quot;">​</a></h3><p>▸ <strong>AddWire</strong>(<code>wire</code>): <code>void</code></p><p>Add a wire to the layout body.</p><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">Wire</td><td style="text-align:left;">[Mx3dShapeWire] (Mx3dShapeWire. md)</td><td style="text-align:left;">The wire object to be added</td></tr></tbody></table><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="build" tabindex="-1">Build <a class="header-anchor" href="#build" aria-label="Permalink to &quot;Build&quot;">​</a></h3><p>▸ <strong>Build</strong>(): <code>void</code></p><p>Execute the modeling algorithm for the layout body.</p><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="continuity" tabindex="-1">Continuity <a class="header-anchor" href="#continuity" aria-label="Permalink to &quot;Continuity&quot;">​</a></h3><p>▸ <strong>Continuity</strong>(): <a href="./../enums/MdGe.MxGAShapeEnum.html"><code>MxGAShapeEnum</code></a></p><p>Obtain the continuity of the layout body.</p><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./../enums/MdGe.MxGAShapeEnum.html"><code>MxGAShapeEnum</code></a></p><p>The continuity enumeration value of the current layout body.</p><hr><h3 id="isdone" tabindex="-1">IsDone <a class="header-anchor" href="#isdone" aria-label="Permalink to &quot;IsDone&quot;">​</a></h3><p>▸ <strong>IsDone</strong>(): <code>boolean</code></p><p>Check if the modeling algorithm has been executed successfully.</p><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><p>The flag indicating whether the modeling algorithm execution has been completed, with true indicating completion and false indicating failure.</p><hr><h3 id="setcontinuity" tabindex="-1">SetContinuity <a class="header-anchor" href="#setcontinuity" aria-label="Permalink to &quot;SetContinuity&quot;">​</a></h3><p>▸ <strong>SetContinuity</strong>(<code>C</code>): <code>void</code></p><p>Set the continuity of the layout body.</p><h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">C</td><td style="text-align:left;">[MxGAShapeenum] (../enums/MdGe. MxGAShapeenum. md)</td><td style="text-align:left;">The continuity enumeration value of the shape</td></tr></tbody></table><h4 id="returns-5" tabindex="-1">Returns <a class="header-anchor" href="#returns-5" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="setsmoothing" tabindex="-1">SetSmoothing <a class="header-anchor" href="#setsmoothing" aria-label="Permalink to &quot;SetSmoothing&quot;">​</a></h3><p>▸ <strong>SetSmoothing</strong>(<code>UseSmoothing</code>): <code>void</code></p><p>Set whether to use smoothing processing.</p><h4 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">UseSmoothing</td><td style="text-align:left;">boolean</td><td style="text-align:left;">Use the flag for smoothing processing</td></tr></tbody></table><h4 id="returns-6" tabindex="-1">Returns <a class="header-anchor" href="#returns-6" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="shape" tabindex="-1">Shape <a class="header-anchor" href="#shape" aria-label="Permalink to &quot;Shape&quot;">​</a></h3><p>▸ <strong>Shape</strong>(): <a href="./Mx3dShapeObject.html"><code>Mx3dShapeObject</code></a></p><p>Obtain the shape of the layout body.</p><h4 id="returns-7" tabindex="-1">Returns <a class="header-anchor" href="#returns-7" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./Mx3dShapeObject.html"><code>Mx3dShapeObject</code></a></p><p>The shape object of the layout body.</p><hr><h3 id="usesmoothing" tabindex="-1">UseSmoothing <a class="header-anchor" href="#usesmoothing" aria-label="Permalink to &quot;UseSmoothing&quot;">​</a></h3><p>▸ <strong>UseSmoothing</strong>(): <code>boolean</code></p><p>Check if smoothing is used.</p><h4 id="returns-8" tabindex="-1">Returns <a class="header-anchor" href="#returns-8" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><p>The usage status of smoothing processing, true is used, false is not used.</p>',84)])])}const f=t(d,[["render",l]]);export{p as __pageData,f as default};
