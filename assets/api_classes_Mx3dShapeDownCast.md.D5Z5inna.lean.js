import{_ as t,c as a,o as d,a3 as r}from"./chunks/framework.C-dFTOTt.js";const x=JSON.parse('{"title":"Class: Mx3dShapeDownCast","description":"","frontmatter":{},"headers":[],"relativePath":"api/classes/Mx3dShapeDownCast.md","filePath":"api/classes/Mx3dShapeDownCast.md"}'),h={name:"api/classes/Mx3dShapeDownCast.md"};function l(o,e,s,c,n,i){return d(),a("div",null,[...e[0]||(e[0]=[r('<p><a href="./../README.html">mxcad_3d API 文档</a> / Mx3dShapeDownCast</p><h1 id="class-mx3dshapedowncast" tabindex="-1">Class: Mx3dShapeDownCast <a class="header-anchor" href="#class-mx3dshapedowncast" aria-label="Permalink to &quot;Class: Mx3dShapeDownCast&quot;">​</a></h1><p>形状对象的向下类型转换接口</p><h2 id="table-of-contents" tabindex="-1">Table of contents <a class="header-anchor" href="#table-of-contents" aria-label="Permalink to &quot;Table of contents&quot;">​</a></h2><h3 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-label="Permalink to &quot;Constructors&quot;">​</a></h3><ul><li><a href="./Mx3dShapeDownCast.html#constructor">constructor</a></li></ul><h3 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h3><ul><li><a href="./Mx3dShapeDownCast.html#compsolid">CompSolid</a></li><li><a href="./Mx3dShapeDownCast.html#compound">Compound</a></li><li><a href="./Mx3dShapeDownCast.html#edge">Edge</a></li><li><a href="./Mx3dShapeDownCast.html#face">Face</a></li><li><a href="./Mx3dShapeDownCast.html#shell">Shell</a></li><li><a href="./Mx3dShapeDownCast.html#solid">Solid</a></li><li><a href="./Mx3dShapeDownCast.html#vertex">Vertex</a></li><li><a href="./Mx3dShapeDownCast.html#wire">Wire</a></li></ul><h2 id="constructors-1" tabindex="-1">Constructors <a class="header-anchor" href="#constructors-1" aria-label="Permalink to &quot;Constructors&quot;">​</a></h2><h3 id="constructor" tabindex="-1">constructor <a class="header-anchor" href="#constructor" aria-label="Permalink to &quot;constructor&quot;">​</a></h3><p>• <strong>new Mx3dShapeDownCast</strong>()</p><h2 id="methods-1" tabindex="-1">Methods <a class="header-anchor" href="#methods-1" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="compsolid" tabindex="-1">CompSolid <a class="header-anchor" href="#compsolid" aria-label="Permalink to &quot;CompSolid&quot;">​</a></h3><p>▸ <code>Static</code> <strong>CompSolid</strong>(<code>S</code>): <a href="./Mx3dShapeCompSolid.html"><code>Mx3dShapeCompSolid</code></a></p><p>将 Mx3dShapeObject 对象转换为 Mx3dShapeCompSolid 对象(Mx3dShapeObject 的实际类型需要是 Mx3dShapeCompSolid)</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>S</code></td><td style="text-align:left;"><a href="./Mx3dShapeObject.html"><code>Mx3dShapeObject</code></a></td><td style="text-align:left;">需要转换的形状对象</td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./Mx3dShapeCompSolid.html"><code>Mx3dShapeCompSolid</code></a></p><p>转换后的子类形状对象</p><hr><h3 id="compound" tabindex="-1">Compound <a class="header-anchor" href="#compound" aria-label="Permalink to &quot;Compound&quot;">​</a></h3><p>▸ <code>Static</code> <strong>Compound</strong>(<code>S</code>): <a href="./Mx3dShapeCompound.html"><code>Mx3dShapeCompound</code></a></p><p>将 Mx3dShapeObject 对象转换为 Mx3dShapeCompound 对象(Mx3dShapeObject 的实际类型需要是 Mx3dShapeCompound)</p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>S</code></td><td style="text-align:left;"><a href="./Mx3dShapeObject.html"><code>Mx3dShapeObject</code></a></td><td style="text-align:left;">需要转换的形状对象</td></tr></tbody></table><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./Mx3dShapeCompound.html"><code>Mx3dShapeCompound</code></a></p><p>转换后的子类形状对象</p><hr><h3 id="edge" tabindex="-1">Edge <a class="header-anchor" href="#edge" aria-label="Permalink to &quot;Edge&quot;">​</a></h3><p>▸ <code>Static</code> <strong>Edge</strong>(<code>S</code>): <a href="./Mx3dShapeEdge.html"><code>Mx3dShapeEdge</code></a></p><p>将 Mx3dShapeObject 对象转换为 Mx3dShapeEdge 对象(Mx3dShapeObject 的实际类型需要是 Mx3dShapeEdge)</p><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>S</code></td><td style="text-align:left;"><a href="./Mx3dShapeObject.html"><code>Mx3dShapeObject</code></a></td><td style="text-align:left;">需要转换的形状对象</td></tr></tbody></table><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./Mx3dShapeEdge.html"><code>Mx3dShapeEdge</code></a></p><p>转换后的子类形状对象</p><hr><h3 id="face" tabindex="-1">Face <a class="header-anchor" href="#face" aria-label="Permalink to &quot;Face&quot;">​</a></h3><p>▸ <code>Static</code> <strong>Face</strong>(<code>S</code>): <a href="./Mx3dShapeFace.html"><code>Mx3dShapeFace</code></a></p><p>将 Mx3dShapeObject 对象转换为 Mx3dShapeFace 对象(Mx3dShapeObject 的实际类型需要是 Mx3dShapeFace)</p><h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>S</code></td><td style="text-align:left;"><a href="./Mx3dShapeObject.html"><code>Mx3dShapeObject</code></a></td><td style="text-align:left;">需要转换的形状对象</td></tr></tbody></table><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./Mx3dShapeFace.html"><code>Mx3dShapeFace</code></a></p><p>转换后的子类形状对象</p><hr><h3 id="shell" tabindex="-1">Shell <a class="header-anchor" href="#shell" aria-label="Permalink to &quot;Shell&quot;">​</a></h3><p>▸ <code>Static</code> <strong>Shell</strong>(<code>S</code>): <a href="./Mx3dShapeShell.html"><code>Mx3dShapeShell</code></a></p><p>将 Mx3dShapeObject 对象转换为 Mx3dShapeShell 对象(Mx3dShapeObject 的实际类型需要是 Mx3dShapeShell)</p><h4 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>S</code></td><td style="text-align:left;"><a href="./Mx3dShapeObject.html"><code>Mx3dShapeObject</code></a></td><td style="text-align:left;">需要转换的形状对象</td></tr></tbody></table><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./Mx3dShapeShell.html"><code>Mx3dShapeShell</code></a></p><p>转换后的子类形状对象</p><hr><h3 id="solid" tabindex="-1">Solid <a class="header-anchor" href="#solid" aria-label="Permalink to &quot;Solid&quot;">​</a></h3><p>▸ <code>Static</code> <strong>Solid</strong>(<code>S</code>): <a href="./Mx3dShapeSolid.html"><code>Mx3dShapeSolid</code></a></p><p>将 Mx3dShapeObject 对象转换为 Mx3dShapeSolid 对象(Mx3dShapeObject 的实际类型需要是 Mx3dShapeSolid)</p><h4 id="parameters-5" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-5" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>S</code></td><td style="text-align:left;"><a href="./Mx3dShapeObject.html"><code>Mx3dShapeObject</code></a></td><td style="text-align:left;">需要转换的形状对象</td></tr></tbody></table><h4 id="returns-5" tabindex="-1">Returns <a class="header-anchor" href="#returns-5" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./Mx3dShapeSolid.html"><code>Mx3dShapeSolid</code></a></p><p>转换后的子类形状对象</p><hr><h3 id="vertex" tabindex="-1">Vertex <a class="header-anchor" href="#vertex" aria-label="Permalink to &quot;Vertex&quot;">​</a></h3><p>▸ <code>Static</code> <strong>Vertex</strong>(<code>S</code>): <a href="./Mx3dShapeVertex.html"><code>Mx3dShapeVertex</code></a></p><p>将 Mx3dShapeObject 对象转换为 Mx3dShapeVertex 对象(Mx3dShapeObject 的实际类型需要是 Mx3dShapeVertex)</p><h4 id="parameters-6" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-6" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>S</code></td><td style="text-align:left;"><a href="./Mx3dShapeObject.html"><code>Mx3dShapeObject</code></a></td><td style="text-align:left;">需要转换的形状对象</td></tr></tbody></table><h4 id="returns-6" tabindex="-1">Returns <a class="header-anchor" href="#returns-6" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./Mx3dShapeVertex.html"><code>Mx3dShapeVertex</code></a></p><p>转换后的子类形状对象</p><hr><h3 id="wire" tabindex="-1">Wire <a class="header-anchor" href="#wire" aria-label="Permalink to &quot;Wire&quot;">​</a></h3><p>▸ <code>Static</code> <strong>Wire</strong>(<code>S</code>): <a href="./Mx3dShapeWire.html"><code>Mx3dShapeWire</code></a></p><p>将 Mx3dShapeObject 对象转换为 Mx3dShapeWire 对象(Mx3dShapeObject 的实际类型需要是 Mx3dShapeWire)</p><h4 id="parameters-7" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-7" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>S</code></td><td style="text-align:left;"><a href="./Mx3dShapeObject.html"><code>Mx3dShapeObject</code></a></td><td style="text-align:left;">需要转换的形状对象</td></tr></tbody></table><h4 id="returns-7" tabindex="-1">Returns <a class="header-anchor" href="#returns-7" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./Mx3dShapeWire.html"><code>Mx3dShapeWire</code></a></p><p>转换后的子类形状对象</p>',83)])])}const S=t(h,[["render",l]]);export{x as __pageData,S as default};
