import{_ as t,c as a,o as r,a3 as o}from"./chunks/framework.C-dFTOTt.js";const u=JSON.parse('{"title":"Class: Mx3dMkBox","description":"","frontmatter":{},"headers":[],"relativePath":"api_en/classes/Mx3dMkBox.md","filePath":"api_en/classes/Mx3dMkBox.md"}'),h={name:"api_en/classes/Mx3dMkBox.md"};function l(d,e,n,s,i,c){return r(),a("div",null,[...e[0]||(e[0]=[o('<p>[mxcad_3d API Document](../README. md)/Mx3dMkBox</p><h1 id="class-mx3dmkbox" tabindex="-1">Class: Mx3dMkBox <a class="header-anchor" href="#class-mx3dmkbox" aria-label="Permalink to &quot;Class: Mx3dMkBox&quot;">​</a></h1><p>The class that represents the modeling rectangular prism inherits from Mx3dMkObject</p><h2 id="hierarchy" tabindex="-1">Hierarchy <a class="header-anchor" href="#hierarchy" aria-label="Permalink to &quot;Hierarchy&quot;">​</a></h2><ul><li><p><a href="./Mx3dMkObject.html"><code>Mx3dMkObject</code></a></p><p>↳ <strong><code>Mx3dMkBox</code></strong></p></li></ul><h2 id="table-of-contents" tabindex="-1">Table of contents <a class="header-anchor" href="#table-of-contents" aria-label="Permalink to &quot;Table of contents&quot;">​</a></h2><h3 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-label="Permalink to &quot;Constructors&quot;">​</a></h3><ul><li><a href="./Mx3dMkBox.html#constructor">constructor</a></li></ul><h3 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h3><ul><li><a href="./Mx3dMkBox.html#backface">BackFace</a></li><li><a href="./Mx3dMkBox.html#bottomface">BottomFace</a></li><li><a href="./Mx3dMkBox.html#build">Build</a></li><li><a href="./Mx3dMkBox.html#frontface">FrontFace</a></li><li><a href="./Mx3dMkBox.html#isdone">IsDone</a></li><li><a href="./Mx3dMkBox.html#leftface">LeftFace</a></li><li><a href="./Mx3dMkBox.html#rightface">RightFace</a></li><li><a href="./Mx3dMkBox.html#shape">Shape</a></li><li><a href="./Mx3dMkBox.html#shell">Shell</a></li><li><a href="./Mx3dMkBox.html#solid">Solid</a></li><li><a href="./Mx3dMkBox.html#topface">TopFace</a></li></ul><h2 id="constructors-1" tabindex="-1">Constructors <a class="header-anchor" href="#constructors-1" aria-label="Permalink to &quot;Constructors&quot;">​</a></h2><h3 id="constructor" tabindex="-1">constructor <a class="header-anchor" href="#constructor" aria-label="Permalink to &quot;constructor&quot;">​</a></h3><p>• <strong>new Mx3dMkBox</strong>(<code>thePnt1</code>, <code>thePnt2</code>)</p><p>Constructor that accepts two diagonal points of a rectangular prism as parameters.</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">ThePnt1</td><td style="text-align:left;">UniPoint</td><td style="text-align:left;">The first diagonal point</td></tr><tr><td style="text-align:left;">ThePnt2</td><td style="text-align:left;">UniPoint</td><td style="text-align:left;">Second diagonal point</td></tr></tbody></table><h4 id="overrides" tabindex="-1">Overrides <a class="header-anchor" href="#overrides" aria-label="Permalink to &quot;Overrides&quot;">​</a></h4><p>Mx3dMkObject.constructor</p><p>• <strong>new Mx3dMkBox</strong>(<code>theDX</code>, <code>theDY</code>, <code>theDZ</code>)</p><p>Constructor, taking the (0,0,0) point in the world coordinate system as the first corner, and accepting three values (theDX, theDY, theDZ) as the second corner parameter.</p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">TheDX</td><td style="text-align:left;">Number</td><td style="text-align:left;">The second corner point&#39;s X-direction component</td></tr><tr><td style="text-align:left;">TheDY</td><td style="text-align:left;">Number</td><td style="text-align:left;">The Y-direction component of the second corner point</td></tr><tr><td style="text-align:left;">TheDZ</td><td style="text-align:left;">Number</td><td style="text-align:left;">The Z-direction component of the second corner point</td></tr></tbody></table><h4 id="overrides-1" tabindex="-1">Overrides <a class="header-anchor" href="#overrides-1" aria-label="Permalink to &quot;Overrides&quot;">​</a></h4><p>Mx3dMkObject.constructor</p><p>• <strong>new Mx3dMkBox</strong>(<code>theAxes</code>, <code>theDX</code>, <code>theDY</code>, <code>theDZ</code>)</p><p>Constructor, taking the (0,0,0) point in the theAxes coordinate system as the first corner, and accepting three values (theDX, theDY, theDZ) as the second corner parameter.</p><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">The Axes</td><td style="text-align:left;">[Mx3dGeCSYSR] (Mx3dGeCSYSR. md)</td><td style="text-align:left;">Coordinate system object</td></tr><tr><td style="text-align:left;">TheDX</td><td style="text-align:left;">Number</td><td style="text-align:left;">The second corner point&#39;s X-direction component</td></tr><tr><td style="text-align:left;">TheDY</td><td style="text-align:left;">Number</td><td style="text-align:left;">The Y-direction component of the second corner point</td></tr><tr><td style="text-align:left;">TheDZ</td><td style="text-align:left;">Number</td><td style="text-align:left;">The Z-direction component of the second corner point</td></tr></tbody></table><h4 id="overrides-2" tabindex="-1">Overrides <a class="header-anchor" href="#overrides-2" aria-label="Permalink to &quot;Overrides&quot;">​</a></h4><p>Mx3dMkObject.constructor</p><h2 id="methods-1" tabindex="-1">Methods <a class="header-anchor" href="#methods-1" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="backface" tabindex="-1">BackFace <a class="header-anchor" href="#backface" aria-label="Permalink to &quot;BackFace&quot;">​</a></h3><p>▸ <strong>BackFace</strong>(): <a href="./Mx3dShapeFace.html"><code>Mx3dShapeFace</code></a></p><p>Obtain the shape of the back topology of the rectangular prism.</p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./Mx3dShapeFace.html"><code>Mx3dShapeFace</code></a></p><p>Tuopu surface shape.</p><hr><h3 id="bottomface" tabindex="-1">BottomFace <a class="header-anchor" href="#bottomface" aria-label="Permalink to &quot;BottomFace&quot;">​</a></h3><p>▸ <strong>BottomFace</strong>(): <a href="./Mx3dShapeFace.html"><code>Mx3dShapeFace</code></a></p><p>Obtain the shape of the bottom topology of the rectangular prism.</p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./Mx3dShapeFace.html"><code>Mx3dShapeFace</code></a></p><p>Tuopu surface shape.</p><hr><h3 id="build" tabindex="-1">Build <a class="header-anchor" href="#build" aria-label="Permalink to &quot;Build&quot;">​</a></h3><p>▸ <strong>Build</strong>(): <code>void</code></p><p>Execute the modeling algorithm for rectangular prisms.</p><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="frontface" tabindex="-1">FrontFace <a class="header-anchor" href="#frontface" aria-label="Permalink to &quot;FrontFace&quot;">​</a></h3><p>▸ <strong>FrontFace</strong>(): <a href="./Mx3dShapeFace.html"><code>Mx3dShapeFace</code></a></p><p>Obtain the shape of the front topology of the rectangular prism.</p><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./Mx3dShapeFace.html"><code>Mx3dShapeFace</code></a></p><p>Tuopu surface shape.</p><hr><h3 id="isdone" tabindex="-1">IsDone <a class="header-anchor" href="#isdone" aria-label="Permalink to &quot;IsDone&quot;">​</a></h3><p>▸ <strong>IsDone</strong>(): <code>boolean</code></p><p>Check if the modeling algorithm has been executed successfully.</p><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><p>The flag indicating whether the modeling algorithm execution has been completed, with true indicating completion and false indicating failure.</p><hr><h3 id="leftface" tabindex="-1">LeftFace <a class="header-anchor" href="#leftface" aria-label="Permalink to &quot;LeftFace&quot;">​</a></h3><p>▸ <strong>LeftFace</strong>(): <a href="./Mx3dShapeFace.html"><code>Mx3dShapeFace</code></a></p><p>Obtain the left side topology shape of the rectangular prism.</p><h4 id="returns-5" tabindex="-1">Returns <a class="header-anchor" href="#returns-5" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./Mx3dShapeFace.html"><code>Mx3dShapeFace</code></a></p><p>Tuopu surface shape.</p><hr><h3 id="rightface" tabindex="-1">RightFace <a class="header-anchor" href="#rightface" aria-label="Permalink to &quot;RightFace&quot;">​</a></h3><p>▸ <strong>RightFace</strong>(): <a href="./Mx3dShapeFace.html"><code>Mx3dShapeFace</code></a></p><p>Obtain the right side topology shape of the rectangular prism.</p><h4 id="returns-6" tabindex="-1">Returns <a class="header-anchor" href="#returns-6" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./Mx3dShapeFace.html"><code>Mx3dShapeFace</code></a></p><p>Tuopu surface shape.</p><hr><h3 id="shape" tabindex="-1">Shape <a class="header-anchor" href="#shape" aria-label="Permalink to &quot;Shape&quot;">​</a></h3><p>▸ <strong>Shape</strong>(): <a href="./Mx3dShapeObject.html"><code>Mx3dShapeObject</code></a></p><p>Obtain the topological shape of a rectangular prism.</p><h4 id="returns-7" tabindex="-1">Returns <a class="header-anchor" href="#returns-7" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./Mx3dShapeObject.html"><code>Mx3dShapeObject</code></a></p><p>Topological shape.</p><hr><h3 id="shell" tabindex="-1">Shell <a class="header-anchor" href="#shell" aria-label="Permalink to &quot;Shell&quot;">​</a></h3><p>▸ <strong>Shell</strong>(): <a href="./Mx3dShapeShell.html"><code>Mx3dShapeShell</code></a></p><p>Obtain the topological shell shape of the rectangular prism.</p><h4 id="returns-8" tabindex="-1">Returns <a class="header-anchor" href="#returns-8" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./Mx3dShapeShell.html"><code>Mx3dShapeShell</code></a></p><p>Topological shell shape.</p><hr><h3 id="solid" tabindex="-1">Solid <a class="header-anchor" href="#solid" aria-label="Permalink to &quot;Solid&quot;">​</a></h3><p>▸ <strong>Solid</strong>(): <a href="./Mx3dShapeSolid.html"><code>Mx3dShapeSolid</code></a></p><p>Obtain the topological solid shape of a rectangular prism.</p><h4 id="returns-9" tabindex="-1">Returns <a class="header-anchor" href="#returns-9" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./Mx3dShapeSolid.html"><code>Mx3dShapeSolid</code></a></p><p>Topological entity shape.</p><hr><h3 id="topface" tabindex="-1">TopFace <a class="header-anchor" href="#topface" aria-label="Permalink to &quot;TopFace&quot;">​</a></h3><p>▸ <strong>TopFace</strong>(): <a href="./Mx3dShapeFace.html"><code>Mx3dShapeFace</code></a></p><p>Obtain the top topology shape of the rectangular prism.</p><h4 id="returns-10" tabindex="-1">Returns <a class="header-anchor" href="#returns-10" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./Mx3dShapeFace.html"><code>Mx3dShapeFace</code></a></p><p>Tuopu surface shape.</p>',106)])])}const f=t(h,[["render",l]]);export{u as __pageData,f as default};
