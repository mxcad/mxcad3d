import{_ as t,c as a,o as l,a3 as r}from"./chunks/framework.C-dFTOTt.js";const m=JSON.parse('{"title":"Class: Mx3dUtils","description":"","frontmatter":{},"headers":[],"relativePath":"api_en/classes/Mx3dUtils.md","filePath":"api_en/classes/Mx3dUtils.md"}'),o={name:"api_en/classes/Mx3dUtils.md"};function s(d,e,i,h,n,c){return l(),a("div",null,[...e[0]||(e[0]=[r('<p>[mxcad_3d API documentation](../README. md)/Mx3dUtils</p><h1 id="class-mx3dutils" tabindex="-1">Class: Mx3dUtils <a class="header-anchor" href="#class-mx3dutils" aria-label="Permalink to &quot;Class: Mx3dUtils&quot;">​</a></h1><p>Tool category</p><h2 id="table-of-contents" tabindex="-1">Table of contents <a class="header-anchor" href="#table-of-contents" aria-label="Permalink to &quot;Table of contents&quot;">​</a></h2><h3 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-label="Permalink to &quot;Constructors&quot;">​</a></h3><ul><li><a href="./Mx3dUtils.html#constructor">constructor</a></li></ul><h3 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h3><ul><li><a href="./Mx3dUtils.html#loadfilefromurl">LoadFileFromUrl</a></li><li><a href="./Mx3dUtils.html#loadlocalfile">LoadLocalFile</a></li><li><a href="./Mx3dUtils.html#loadshapefromfile">LoadShapeFromFile</a></li></ul><h2 id="constructors-1" tabindex="-1">Constructors <a class="header-anchor" href="#constructors-1" aria-label="Permalink to &quot;Constructors&quot;">​</a></h2><h3 id="constructor" tabindex="-1">constructor <a class="header-anchor" href="#constructor" aria-label="Permalink to &quot;constructor&quot;">​</a></h3><p>• <strong>new Mx3dUtils</strong>()</p><h2 id="methods-1" tabindex="-1">Methods <a class="header-anchor" href="#methods-1" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="loadfilefromurl" tabindex="-1">LoadFileFromUrl <a class="header-anchor" href="#loadfilefromurl" aria-label="Permalink to &quot;LoadFileFromUrl&quot;">​</a></h3><p>▸ <code>Static</code> <strong>LoadFileFromUrl</strong>(<code>theFileUrl</code>, <code>theSaveFileName</code>): <a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise" target="_blank" rel="noreferrer"><code>Promise</code></a>&lt;<code>string</code>&gt;</p><p>Load files from URL address to virtual file system</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">TheFileURL</td><td style="text-align:left;">string</td><td style="text-align:left;">Resource URL address</td></tr><tr><td style="text-align:left;">TheSaveFileName</td><td style="text-align:left;">string</td><td style="text-align:left;">The complete path of the file in the virtual file system</td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise" target="_blank" rel="noreferrer"><code>Promise</code></a>&lt;<code>string</code>&gt;</p><p>Return the absolute path of the file in the virtual file system after success</p><hr><h3 id="loadlocalfile" tabindex="-1">LoadLocalFile <a class="header-anchor" href="#loadlocalfile" aria-label="Permalink to &quot;LoadLocalFile&quot;">​</a></h3><p>▸ <code>Static</code> <strong>LoadLocalFile</strong>(<code>theFile</code>, <code>theFilePath</code>): <a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise" target="_blank" rel="noreferrer"><code>Promise</code></a>&lt;<code>string</code>&gt;</p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>theFile</code></td><td style="text-align:left;"><a href="https://developer.mozilla.org/docs/Web/API/File" target="_blank" rel="noreferrer"><code>File</code></a></td></tr><tr><td style="text-align:left;"><code>theFilePath</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise" target="_blank" rel="noreferrer"><code>Promise</code></a>&lt;<code>string</code>&gt;</p><hr><h3 id="loadshapefromfile" tabindex="-1">LoadShapeFromFile <a class="header-anchor" href="#loadshapefromfile" aria-label="Permalink to &quot;LoadShapeFromFile&quot;">​</a></h3><p>▸ <code>Static</code> <strong>LoadShapeFromFile</strong>(<code>theFilePath</code>, <code>theFormat</code>): <a href="./Mx3dShapeObject.html"><code>Mx3dShapeObject</code></a>[]</p><p>Read the model file from the virtual file system and return the shapes in the model file</p><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">TheFilePath</td><td style="text-align:left;">string</td><td style="text-align:left;">The complete path of the model file</td></tr><tr><td style="text-align:left;">TheFormat</td><td style="text-align:left;">[MxFormat] (../enums/MdGe. MxFormat. md)</td><td style="text-align:left;">Format of model files</td></tr></tbody></table><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./Mx3dShapeObject.html"><code>Mx3dShapeObject</code></a>[]</p><p>The shape read from the model file</p>',36)])])}const p=t(o,[["render",s]]);export{m as __pageData,p as default};
