import{_ as t,c as a,o as l,a3 as d}from"./chunks/framework.C-dFTOTt.js";const f=JSON.parse('{"title":"Class: Mx3dMkThickSolid","description":"","frontmatter":{},"headers":[],"relativePath":"api_en/classes/Mx3dMkThickSolid.md","filePath":"api_en/classes/Mx3dMkThickSolid.md"}'),o={name:"api_en/classes/Mx3dMkThickSolid.md"};function i(s,e,r,n,h,c){return l(),a("div",null,[...e[0]||(e[0]=[d('<p>[mxcad_3d API Document](../README. md)/Mx3dMkThickSolid</p><h1 id="class-mx3dmkthicksolid" tabindex="-1">Class: Mx3dMkThickSolid <a class="header-anchor" href="#class-mx3dmkthicksolid" aria-label="Permalink to &quot;Class: Mx3dMkThickSolid&quot;">​</a></h1><p>The class that represents modeling thick walled solids inherits from Mx3dMkObject.</p><h2 id="hierarchy" tabindex="-1">Hierarchy <a class="header-anchor" href="#hierarchy" aria-label="Permalink to &quot;Hierarchy&quot;">​</a></h2><ul><li><p><a href="./Mx3dMkObject.html"><code>Mx3dMkObject</code></a></p><p>↳ <strong><code>Mx3dMkThickSolid</code></strong></p></li></ul><h2 id="table-of-contents" tabindex="-1">Table of contents <a class="header-anchor" href="#table-of-contents" aria-label="Permalink to &quot;Table of contents&quot;">​</a></h2><h3 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-label="Permalink to &quot;Constructors&quot;">​</a></h3><ul><li><a href="./Mx3dMkThickSolid.html#constructor">constructor</a></li></ul><h3 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h3><ul><li><a href="./Mx3dMkThickSolid.html#build">Build</a></li><li><a href="./Mx3dMkThickSolid.html#isdone">IsDone</a></li><li><a href="./Mx3dMkThickSolid.html#makethicksolidbyjoin">MakeThickSolidByJoin</a></li><li><a href="./Mx3dMkThickSolid.html#makethicksolidbysimple">MakeThickSolidBySimple</a></li><li><a href="./Mx3dMkThickSolid.html#shape">Shape</a></li></ul><h2 id="constructors-1" tabindex="-1">Constructors <a class="header-anchor" href="#constructors-1" aria-label="Permalink to &quot;Constructors&quot;">​</a></h2><h3 id="constructor" tabindex="-1">constructor <a class="header-anchor" href="#constructor" aria-label="Permalink to &quot;constructor&quot;">​</a></h3><p>• <strong>new Mx3dMkThickSolid</strong>()</p><p>Constructor, initialize thick walled solid objects.</p><h4 id="overrides" tabindex="-1">Overrides <a class="header-anchor" href="#overrides" aria-label="Permalink to &quot;Overrides&quot;">​</a></h4><p>Mx3dMkObject.constructor</p><h2 id="methods-1" tabindex="-1">Methods <a class="header-anchor" href="#methods-1" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="build" tabindex="-1">Build <a class="header-anchor" href="#build" aria-label="Permalink to &quot;Build&quot;">​</a></h3><p>▸ <strong>Build</strong>(): <code>void</code></p><p>Implement modeling algorithms for thick walled solids. This method completes the construction process of thick walled solids.</p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="isdone" tabindex="-1">IsDone <a class="header-anchor" href="#isdone" aria-label="Permalink to &quot;IsDone&quot;">​</a></h3><p>▸ <strong>IsDone</strong>(): <code>boolean</code></p><p>Check if the modeling algorithm has been executed successfully.</p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><p>If the modeling algorithm completes execution, return true; Otherwise, return false.</p><hr><h3 id="makethicksolidbyjoin" tabindex="-1">MakeThickSolidByJoin <a class="header-anchor" href="#makethicksolidbyjoin" aria-label="Permalink to &quot;MakeThickSolidByJoin&quot;">​</a></h3><p>▸ <strong>MakeThickSolidByJoin</strong>(<code>S</code>, <code>ClosingFaces</code>, <code>Offset</code>, <code>Tol</code>, <code>Mode?</code>, <code>Intersection?</code>, <code>SelfInter?</code>, <code>Join?</code>, <code>RemoveIntEdges?</code>): <code>void</code></p><p>Build thick walled solids using connection algorithms. This method is based on creating a thick walled solid using a solid and a set of closed surfaces.</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default value</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">S</td><td style="text-align:left;">[Mx3dShapeObject] (Mx3dShapeObject. md)</td><td style="text-align:left;">undefined</td><td style="text-align:left;">The initial solid object to be used</td></tr><tr><td style="text-align:left;">ClosingFaces</td><td style="text-align:left;">[Mx3dShapeObject] (Mx3dShapeObject. md) []</td><td style="text-align:left;">undefined</td><td style="text-align:left;">Object array to be removed</td></tr><tr><td style="text-align:left;">Offset</td><td style="text-align:left;">number</td><td style="text-align:left;">undefined</td><td style="text-align:left;">The thickness value defines the thickness of the wall. Positive values indicate the outer side, while negative values indicate the inner side</td></tr><tr><td style="text-align:left;">Tol</td><td style="text-align:left;">number</td><td style="text-align:left;">undefined</td><td style="text-align:left;">The tolerance value defines the coincidence standard for generating shapes</td></tr><tr><td style="text-align:left;">Mode</td><td style="text-align:left;">[MxOffsetModeenum] (../enums/MdGe. MxOffsetModeenum. md)</td><td style="text-align:left;">MdGe. MxOffsetModeenum. Offset_Skin</td><td style="text-align:left;">Construction mode, default to BRepOffset_Skin, defines the parallel line construction method for free edges</td></tr><tr><td style="text-align:left;">Intersection</td><td style="text-align:left;">boolean</td><td style="text-align:left;">false</td><td style="text-align:left;">Calculate intersection, not calculated by default</td></tr><tr><td style="text-align:left;">SelfInter</td><td style="text-align:left;">boolean</td><td style="text-align:left;">false</td><td style="text-align:left;">Whether to eliminate self crossing, default not to eliminate</td></tr><tr><td style="text-align:left;">Join</td><td style="text-align:left;">[MxGAJoinTypeenum] (../ennus/MdGe. MxGAJoinTypeenum. md)</td><td style="text-align:left;">MdGe. MxGAJoinTypeenum. GA-Arc</td><td style="text-align:left;">Connection type, default to GeomAbs_Src, used to fill gaps between parallel lines</td></tr><tr><td style="text-align:left;"><code>RemoveIntEdges</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;"><code>false</code></td><td style="text-align:left;">Whether to remove internal edges, default not to remove</td></tr></tbody></table><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="makethicksolidbysimple" tabindex="-1">MakeThickSolidBySimple <a class="header-anchor" href="#makethicksolidbysimple" aria-label="Permalink to &quot;MakeThickSolidBySimple&quot;">​</a></h3><p>▸ <strong>MakeThickSolidBySimple</strong>(<code>theS</code>, <code>theOffsetValue</code>): <code>void</code></p><p>Build thick walled solids using simple algorithms. This method is based on creating a thick walled solid using a solid and an offset value. This algorithm does not support face removal.</p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">TheS</td><td style="text-align:left;">[Mx3dShapeObject] (Mx3dShapeObject. md)</td><td style="text-align:left;">The initial solid object to be used</td></tr><tr><td style="text-align:left;">The OffsetValue</td><td style="text-align:left;">number</td><td style="text-align:left;">thickness value, which defines the thickness of the wall</td></tr></tbody></table><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="shape" tabindex="-1">Shape <a class="header-anchor" href="#shape" aria-label="Permalink to &quot;Shape&quot;">​</a></h3><p>▸ <strong>Shape</strong>(): <a href="./Mx3dShapeObject.html"><code>Mx3dShapeObject</code></a></p><p>Obtain the shape object of a thick walled solid.</p><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./Mx3dShapeObject.html"><code>Mx3dShapeObject</code></a></p><p>The shape object of a thick walled solid.</p>',52)])])}const m=t(o,[["render",i]]);export{f as __pageData,m as default};
